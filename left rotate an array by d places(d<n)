// naive solution

void leftroatate(int arr[], int n, int d)
{
  for(int i=0;i<n;i++)
  leftrotateone(arr,d); //refer to the program of left rotating once the array
}

// best solution

void leftrotate(int arr[], int n, int d)
{
  int temp[d];
  for(int i=0;i<d;i++)
    temp[i]=arr[i]; //copying d elements into temp array
  for(int i=d;i<n;i++)
    arr[i-d]=arr[i]; //moving the elements d spaces
  for(int i=0;i<d;i++)
    arr[n-d+i]=temp[i]; //moving back the d elements into the original array
}

// better solution using reverse function

void leftrotate(int arr[],int n, int d)
{
  reverse(arr,0,d);
  reverse(arr,d,n-1);
  reverse(arr,0,n-1);
}

void reverse( int arr[], int low, int high)
{
  while(low<high)
  {
  swap(arr[low],arr[high])
  low++;
  high--;
  }
}
  
